"use strict";(self.webpackChunkadgiest_demo=self.webpackChunkadgiest_demo||[]).push([[550],{"./src/components/ui/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,PrimaryActive:()=>PrimaryActive,PrimaryGroupedButton:()=>PrimaryGroupedButton,Rounded:()=>Rounded,RoundedActive:()=>RoundedActive,RoundedProgress:()=>RoundedProgress,SecondaryDark:()=>SecondaryDark,SecondaryDarkWithLeftIcon:()=>SecondaryDarkWithLeftIcon,SecondaryDarkWithRightIcon:()=>SecondaryDarkWithRightIcon,SecondaryGradient:()=>SecondaryGradient,SecondaryGradientWithLeftIcon:()=>SecondaryGradientWithLeftIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),lib=__webpack_require__("./node_modules/react-icons/lib/index.mjs");function FaArrowRightLong(props){return(0,lib.k5)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z"},child:[]}]})(props)}function FaPlay(props){return(0,lib.k5)({tag:"svg",attr:{viewBox:"0 0 384 512"},child:[{tag:"path",attr:{d:"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"},child:[]}]})(props)}var cn=__webpack_require__("./src/utils/cn.ts");function Button({className,isActive,variant,iconPosition,icon,children,...props}){const[isClicked,setIsClicked]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)("button",{...props,className:(0,cn.cn)(buttonVariants({variant}),isActive||isClicked?activeStyles(variant):hoverStyles(variant),className,"left"===iconPosition&&"flex items-center gap-[10px]","right"===iconPosition&&"flex items-center flex-row-reverse gap-3"),onMouseDown:()=>setIsClicked(!0),onMouseLeave:()=>setIsClicked(!1),children:[icon&&(0,jsx_runtime.jsx)("span",{className:"icon",children:icon}),children]})}const buttonVariants=(0,__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs").F)("transition-all duration-200 border-none",{variants:{variant:{primary:"rounded h-12 bg-[#ccc] text-[#000] shadow-btn-primary px-8",secondary:"rounded-md h-12 bg-[#000] text-white px-8 uppercase",rounded:"rounded-full bg-[#000] text-white shadow-btn-rounded p-4",roundedProgress:"rounded-full bg-[#c3c3c3] text-black p-4"}},defaultVariants:{variant:"primary"}}),hoverStyles=variant=>{switch(variant){case"primary":return"hover:bg-[#63AA75] hover:shadow-btn-primary-hover";case"rounded":return"hover:bg-[#D9D9D9] hover:shadow-btn-rounded-active";default:return""}},activeStyles=variant=>{switch(variant){case"primary":return"bg-[#63AA75] shadow-btn-primary-active";case"rounded":return"bg-[#D9D9D9] shadow-btn-rounded-active";default:return""}};try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"rounded"'},{value:'"roundedProgress"'}]}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},iconPosition:{defaultValue:null,description:"",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/ui/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}var next_image=__webpack_require__("./node_modules/@storybook/nextjs/dist/images/next-image.mjs");const Button_stories={component:Button,tags:["autodocs"],argTypes:{variant:{options:["primary","secondary","rounded","roundedProgress"],control:"select"},iconPosition:{options:[]},icon:{table:{disable:!0}},progress:{control:{type:"range",min:0,max:100}}},args:{variant:"primary"}},Primary={args:{buttonText:"Primary",variant:"primary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,children:buttonText})},PrimaryActive={args:{buttonText:"Primary Active",variant:"primary",isActive:!0},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,children:buttonText})},PrimaryGroupedButton={args:{variant:"primary"},render:({...args})=>{const[activeBtn,setActiveBtn]=(0,react.useState)(null);return(0,jsx_runtime.jsx)("div",{className:"flex gap-1",children:[{id:1,name:"Button 1"},{id:2,name:"Button 2"},{id:3,name:"Button 3"}].map((data=>(0,react.createElement)(Button,{...args,key:data.id,isActive:data.id===activeBtn,onClick:()=>setActiveBtn(data.id)},data.name)))})}},SecondaryDark={args:{buttonText:"Secondary Dark",variant:"secondary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,children:buttonText})},SecondaryDarkWithLeftIcon={args:{buttonText:"Secondary Dark With Left Icon",variant:"secondary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,iconPosition:"left",icon:(0,jsx_runtime.jsx)(next_image.A,{src:"/assets/images/png/google.png",alt:"google",width:20,height:20}),children:buttonText})},SecondaryDarkWithRightIcon={args:{buttonText:"Secondary Dark With Right Icon",variant:"secondary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,iconPosition:"right",icon:(0,jsx_runtime.jsx)(FaArrowRightLong,{}),children:buttonText})},SecondaryGradient={args:{buttonText:"Secondary Gradient",variant:"secondary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,className:"bg-btn-gradient",children:buttonText})},SecondaryGradientWithLeftIcon={args:{buttonText:"Let me Fill",variant:"secondary"},render:({buttonText,...args})=>(0,jsx_runtime.jsx)(Button,{...args,className:"bg-btn-gradient px-5",iconPosition:"left",icon:(0,jsx_runtime.jsx)(next_image.A,{src:"/assets/images/png/ghost.png",alt:"ghost",width:42,height:48,className:"scale-[1.75] relative top-[-6px] -left-1"}),children:(0,jsx_runtime.jsx)("span",{className:"relative right-[2px]",children:buttonText})})},Rounded={args:{variant:"rounded"},render:args=>(0,jsx_runtime.jsx)(Button,{...args,children:(0,jsx_runtime.jsx)(FaPlay,{})})},RoundedActive={args:{variant:"rounded",isActive:!0},render:args=>(0,jsx_runtime.jsx)(Button,{...args,children:(0,jsx_runtime.jsx)(FaPlay,{})})},RoundedProgress=({progress=50,...args})=>{const circumference=2*Math.PI*26.5,strokeDashoffset=circumference-progress/100*circumference;return(0,jsx_runtime.jsxs)("div",{className:"relative inline-flex items-center justify-center",children:[(0,jsx_runtime.jsxs)("svg",{width:71,height:71,viewBox:"0 0 71 71",className:"rotate-[-90deg]",children:[(0,jsx_runtime.jsx)("circle",{cx:35.5,cy:35.5,r:26.5,fill:"none",stroke:"#c3c3c3",strokeWidth:6}),(0,jsx_runtime.jsx)("circle",{cx:35.5,cy:35.5,r:26.5,fill:"none",stroke:"#63AA75",strokeWidth:6,strokeLinecap:"round",strokeDasharray:circumference,strokeDashoffset})]}),(0,jsx_runtime.jsx)("div",{className:"absolute",children:(0,jsx_runtime.jsx)(Button,{...args,variant:"roundedProgress",children:(0,jsx_runtime.jsx)(FaPlay,{className:"h-4 w-4"})})})]})},__namedExportsOrder=["Primary","PrimaryActive","PrimaryGroupedButton","SecondaryDark","SecondaryDarkWithLeftIcon","SecondaryDarkWithRightIcon","SecondaryGradient","SecondaryGradientWithLeftIcon","Rounded","RoundedActive","RoundedProgress"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Primary",\n    variant: "primary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args}>{buttonText}</Button>\n}',...Primary.parameters?.docs?.source}}},PrimaryActive.parameters={...PrimaryActive.parameters,docs:{...PrimaryActive.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Primary Active",\n    variant: "primary",\n    isActive: true\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args}>{buttonText}</Button>\n}',...PrimaryActive.parameters?.docs?.source}}},PrimaryGroupedButton.parameters={...PrimaryGroupedButton.parameters,docs:{...PrimaryGroupedButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "primary"\n  },\n  render: ({\n    ...args\n  }) => {\n    const btnData = [{\n      id: 1,\n      name: "Button 1"\n    }, {\n      id: 2,\n      name: "Button 2"\n    }, {\n      id: 3,\n      name: "Button 3"\n    }];\n    const [activeBtn, setActiveBtn] = useState<number | null>(null);\n    return <div className="flex gap-1">\n        {btnData.map(data => <Button {...args} key={data.id} isActive={data.id === activeBtn} onClick={() => setActiveBtn(data.id)}>\n            {data.name}\n          </Button>)}\n      </div>;\n  }\n}',...PrimaryGroupedButton.parameters?.docs?.source}}},SecondaryDark.parameters={...SecondaryDark.parameters,docs:{...SecondaryDark.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Secondary Dark",\n    variant: "secondary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args}>{buttonText}</Button>\n}',...SecondaryDark.parameters?.docs?.source}}},SecondaryDarkWithLeftIcon.parameters={...SecondaryDarkWithLeftIcon.parameters,docs:{...SecondaryDarkWithLeftIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Secondary Dark With Left Icon",\n    variant: "secondary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args} iconPosition="left" icon={<Image src="/assets/images/png/google.png" alt="google" width={20} height={20} />}>\n      {buttonText}\n    </Button>\n}',...SecondaryDarkWithLeftIcon.parameters?.docs?.source}}},SecondaryDarkWithRightIcon.parameters={...SecondaryDarkWithRightIcon.parameters,docs:{...SecondaryDarkWithRightIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Secondary Dark With Right Icon",\n    variant: "secondary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args} iconPosition="right" icon={<FaArrowRightLong />}>\n      {buttonText}\n    </Button>\n}',...SecondaryDarkWithRightIcon.parameters?.docs?.source}}},SecondaryGradient.parameters={...SecondaryGradient.parameters,docs:{...SecondaryGradient.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Secondary Gradient",\n    variant: "secondary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args} className="bg-btn-gradient">\n      {buttonText}\n    </Button>\n}',...SecondaryGradient.parameters?.docs?.source}}},SecondaryGradientWithLeftIcon.parameters={...SecondaryGradientWithLeftIcon.parameters,docs:{...SecondaryGradientWithLeftIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonText: "Let me Fill",\n    variant: "secondary"\n  },\n  render: ({\n    buttonText,\n    ...args\n  }) => <Button {...args} className="bg-btn-gradient px-5" iconPosition="left" icon={<Image src="/assets/images/png/ghost.png" alt="ghost" width={42} height={48} className="scale-[1.75] relative top-[-6px] -left-1" />}>\n      <span className="relative right-[2px]">{buttonText}</span>\n    </Button>\n}',...SecondaryGradientWithLeftIcon.parameters?.docs?.source}}},Rounded.parameters={...Rounded.parameters,docs:{...Rounded.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "rounded"\n  },\n  render: args => <Button {...args}>\n      <FaPlay />\n    </Button>\n}',...Rounded.parameters?.docs?.source}}},RoundedActive.parameters={...RoundedActive.parameters,docs:{...RoundedActive.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "rounded",\n    isActive: true\n  },\n  render: args => <Button {...args}>\n      <FaPlay />\n    </Button>\n}',...RoundedActive.parameters?.docs?.source}}},RoundedProgress.parameters={...RoundedProgress.parameters,docs:{...RoundedProgress.parameters?.docs,source:{originalSource:'({\n  progress = 50,\n  ...args\n}) => {\n  const radius = 29.5; // Radius of the outer circle\n  const strokeWidth = 6; // Thickness of the donut\n  const normalizedRadius = radius - strokeWidth / 2;\n  const circumference = 2 * Math.PI * normalizedRadius;\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return <div className="relative inline-flex items-center justify-center">\n      <svg width={(radius + strokeWidth) * 2} height={(radius + strokeWidth) * 2} viewBox={`0 0 ${(radius + strokeWidth) * 2} ${(radius + strokeWidth) * 2}`} className="rotate-[-90deg]">\n        {/* Background Circle */}\n        <circle cx={radius + strokeWidth} cy={radius + strokeWidth} r={normalizedRadius} fill="none" stroke="#c3c3c3" strokeWidth={strokeWidth} />\n        {/* Progress Circle */}\n        <circle cx={radius + strokeWidth} cy={radius + strokeWidth} r={normalizedRadius} fill="none" stroke="#63AA75" strokeWidth={strokeWidth} strokeLinecap="round" strokeDasharray={circumference} strokeDashoffset={strokeDashoffset} />\n      </svg>\n      {/* Button */}\n      <div className="absolute">\n        <Button {...args} variant="roundedProgress">\n          <FaPlay className="h-4 w-4" />\n        </Button>\n      </div>\n    </div>;\n}',...RoundedProgress.parameters?.docs?.source}}};try{RoundedProgress.displayName="RoundedProgress",RoundedProgress.__docgenInfo={description:"",displayName:"RoundedProgress",props:{progress:{defaultValue:{value:"50"},description:"",name:"progress",required:!1,type:{name:"number"}},variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Button.stories.tsx#RoundedProgress"]={docgenInfo:RoundedProgress.__docgenInfo,name:"RoundedProgress",path:"src/components/ui/Button.stories.tsx#RoundedProgress"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/cn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)(inputs))}}}]);